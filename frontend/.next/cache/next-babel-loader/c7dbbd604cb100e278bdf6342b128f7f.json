{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Link from \"next/link\";\nconst TagsQuery = gql`\nquery Tags {\n  tag(id: \"cG9zdF90YWc6NQ==\") {\n    name\n    posts(where: { orderby: { field: DATE, order: DESC } }) {\n      nodes {\n        title\n        slug\n        date\n        coAuthors {\n          display_name\n          id\n        }\n      }\n    }\n  }\n}`;\nconst FeaturedWrapper = styled.div`\n  width: 100%;\n`;\nconst FeaturedArticlesTitle = styled.h3`\n  font-family: \"Halyard Micro\";\n  font-style: normal;\n  font-weight: normal;\n  text-transform: uppercase;\n  font-size: 18px;\n  line-height: 160.7%;\n  color: #000000;\n  border-bottom: 5px solid black;\n  padding-bottom: 5px;\n  margin: 0;\n`;\nconst ArticleTitle = styled.h5`\n  font-family: Cormorant;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 18px;\n  line-height: 147.7%;\n  color: #000000;\n  margin: 0;\n`;\nconst ArticleByline = styled.span`\n  font-family: Halyard Text;\n  font-style: italic;\n  font-weight: 300;\n  font-size: 11px;\n  line-height: 133.2%;\n  /* or 15px */\n`;\n\nconst Author = author => {\n  return __jsx(Link, {\n    key: author.id,\n    href: {\n      pathname: \"/author\",\n      query: {\n        id: author.id\n      }\n    },\n    passHref: true\n  }, __jsx(\"span\", null, author.display_name, \", \"));\n};\n\nconst ArticleWrapper = styled.div`\n  padding: 20px 0;\n  border-bottom: solid black 1px;\n`;\n\nconst Article = article => {\n  var _article$coAuthors;\n\n  var options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return __jsx(ArticleWrapper, null, __jsx(ArticleTitle, null, article.title), __jsx(ArticleByline, null, \" By \", \" \", (_article$coAuthors = article.coAuthors) === null || _article$coAuthors === void 0 ? void 0 : _article$coAuthors.map(author => {\n    return __jsx(Author, author);\n  }), \" | \", __jsx(\"time\", null, new Date(article.date).toLocaleDateString(\"en-US\", options))));\n}; // const coAuthors: React.FunctionComponent<{AuthorInterface}> = (coAuthors) => {\n//   return ()\n// }\n\n\nconst FeaturedArticles = () => {\n  var _data$tag, _data$tag$posts;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TagsQuery);\n  let articles = data === null || data === void 0 ? void 0 : (_data$tag = data.tag) === null || _data$tag === void 0 ? void 0 : (_data$tag$posts = _data$tag.posts) === null || _data$tag$posts === void 0 ? void 0 : _data$tag$posts.nodes;\n  console.log(articles); // let authorNames = articles.coAuthors.map(function(author) {\n  //   return <><Link key={author.id} href={{pathname:\"/author\", query: {id: author.id}}} passHref>\n  //       <h5>{author.display_name}</h5>\n  //   </Link>{ \",\"} </>\n  // })\n\n  return __jsx(FeaturedWrapper, null, __jsx(FeaturedArticlesTitle, null, \"Featured Articles\"), articles === null || articles === void 0 ? void 0 : articles.map(article => {\n    return __jsx(Article, article);\n  }));\n};\n\nexport default FeaturedArticles;","map":null,"metadata":{},"sourceType":"module"}
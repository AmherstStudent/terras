{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-column: 6 / -1;\\n  width: 100%;\\n  @media screen and (max-width: 1200px) {\\n    grid-column: 1/ -1;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  grid-column: 1 / 6;\\n  width: 100%;\\n  @media screen and (max-width: 1200px) {\\n    grid-column: 1/ -1;\\n  }\\n\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid; \\n  grid-template-columns: repeat(8, 1fr);\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery Article($slug: String) {\\n  postBy(slug: $slug) {\\n    __typename\\n    title\\n    id\\n    date\\n    desiredSlug\\n    excerpt\\n    featuredImage {\\n      sourceUrl\\n      altText\\n    }\\n    categories {\\n      nodes {\\n        name\\n        slug\\n      }\\n    }\\n    coAuthors {\\n      id\\n      display_name\\n      slug\\n      bio\\n      avatar\\n      job_title\\n    }\\n    blocks {\\n      __typename\\n      ... on CoreHeadingBlock {\\n        __typename\\n        attributes {\\n          __typename\\n          ... on CoreHeadingBlockAttributes {\\n            __typename\\n            content\\n            level\\n          }\\n        }\\n      }\\n      ... on CoreImageBlock {\\n        attributes {\\n          __typename\\n          ... on CoreImageBlockAttributes {\\n            __typename\\n            url\\n            caption\\n          }\\n        }\\n      }\\n      ... on CoreQuoteBlock {\\n        __typename\\n        attributes {\\n          ... on CoreQuoteBlockAttributes {\\n            __typename\\n            quote: value\\n            source: citation\\n          }\\n        }\\n      }\\n      ... on CoreListBlock {\\n        __typename\\n        attributes {\\n          values\\n        }\\n      }\\n      ... on CoreParagraphBlock {\\n        __typename\\n        name\\n        attributes {\\n          ... on CoreParagraphBlockAttributesV3 {\\n            __typename\\n            content\\n            dropCap\\n            align\\n          }\\n        }\\n      }\\n      ... on CoreGalleryBlock {\\n        __typename\\n        attributes {\\n          ... on CoreGalleryBlockAttributes {\\n            __typename\\n            ids\\n            images\\n            linkTo\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../../components/layout\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport FeaturedImage from '../../components/article/FeaturedImage';\nimport ArticleHeader from '../../components/article/ArticleHeader';\nimport Navbar from '../../components/base/Navbar';\nimport { NewBlock } from \"../../components/article/RenderBlocks\";\nimport AuthorBio from \"../../components/article/AuthorBio\";\nimport FeaturedArticles from \"../../components/article/FeaturedArticles\";\nimport styled from \"styled-components\"; // TODO: We're going to have add multiple themes, will be a mini refactor.\n\nvar ArticleDocument = gql(_templateObject());\nvar ArticleWrapper = styled.article(_templateObject2());\nvar ArticleContent = styled.section(_templateObject3());\nvar ArticleAside = styled.aside(_templateObject4());\n\nvar Article = function Article(_ref) {\n  var slug = _ref.slug;\n\n  var _useQuery = useQuery(ArticleDocument, {\n    variables: {\n      slug: slug\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading Post...\");\n  if (error) return __jsx(\"p\", null, \"Something wrong happened!\");\n  var article = data.postBy;\n  console.log(article);\n  var elements = article.blocks.map(function (block) {\n    return __jsx(NewBlock, block);\n  });\n  return __jsx(React.Fragment, null, __jsx(Navbar, null), article.featuredImage ? __jsx(FeaturedImage, {\n    src: article.featuredImage.sourceUrl,\n    alt: article.featuredImage.altText\n  }) : \"\", __jsx(Layout, null, __jsx(ArticleWrapper, null, __jsx(ArticleHeader, {\n    title: article.title,\n    description: article.excerpt.replace(/<[^>]*>?/gm, ''),\n    coAuthors: article.coAuthors,\n    date: article.date,\n    section: article.categories.nodes[0]\n  }), __jsx(ArticleContent, null, elements, __jsx(AuthorBio, {\n    authors: article.coAuthors\n  })), __jsx(ArticleAside, null, __jsx(FeaturedArticles, null)))));\n};\n\nArticle.getInitialProps = function _callee(_ref2) {\n  var query;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          return _context.abrupt(\"return\", {\n            slug: query.slug\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Article;","map":null,"metadata":{},"sourceType":"module"}
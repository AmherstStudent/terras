{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport Link from \"next/link\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { formatDate, AuthorNames } from '../util';\nconst TagsQuery = gql`\nquery Tags {\n  tag(id: \"cG9zdF90YWc6NQ==\") {\n    name\n    posts(where: { orderby: { field: DATE, order: DESC } }) {\n      nodes {\n        id\n        title\n        slug\n        date\n        categories {\n            nodes {\n                name\n                slug\n            }\n        }\n        coAuthors {\n          display_name\n          id\n          job_title\n        }\n        \n      }\n    }\n  }\n}`;\nconst PostWrapper = styled.div`\n    border-bottom: 0.5px rgba(0,0,0,0.5) solid;\n    padding: 10px 0;\n`;\nconst Category = styled.a`\nfont-family: Halyard Text;\nfont-style: normal;\nfont-weight: bold;\nfont-size: 12px;\nline-height: 17px;\nletter-spacing: 0.05em;\ntext-transform: uppercase;\n& > a {\n    text-decoration: none;\n    color: #3F1F69;\n}\n`;\nconst Title = styled.h3`\nfont-family: Cormorant;\nfont-style: normal;\nfont-weight: bold;\nfont-size: 21px;\nline-height: 25px;\nmargin: 0;\n\n& > a {\n    text-decoration: none;\n    color: #000000;\n}\n`;\nconst Tagline = styled.p`\nfont-family: Halyard Text;\nfont-style: italic;\nfont-weight: 300;\nfont-size: 12px;\nline-height: 150%;\ncolor: #595959;\nmargin: 5px 0;\n`; /// STEAL FROM TAGS PAGE\n\nconst Post = ({\n  date,\n  title,\n  authors,\n  category,\n  id,\n  slug\n}) => {\n  let titles = authors.length > 1 ? authors === null || authors === void 0 ? void 0 : authors.map(author => {\n    return author.job_title;\n  }).join(\" & \") : authors[0].job_title;\n  return __jsx(PostWrapper, null, __jsx(Category, null, __jsx(Link, {\n    key: id,\n    href: {\n      pathname: \"/section\",\n      query: {\n        slug: category\n      }\n    },\n    passHref: true\n  }, __jsx(\"a\", null, category))), __jsx(Title, null, __jsx(Link, {\n    key: id,\n    href: {\n      pathname: \"/article\",\n      query: {\n        slug: slug\n      }\n    },\n    passHref: true\n  }, __jsx(\"a\", null, title))), __jsx(Tagline, null, \"by \", __jsx(AuthorNames, {\n    authors: authors\n  }), titles, \" || \", __jsx(\"time\", null, formatDate(date))));\n};\n\nconst PostlistWrapper = styled.div`\n    height: 100%;\n\n`;\n\nconst Postlist = () => {\n  var _data$tag, _data$tag$posts;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TagsQuery);\n  let articles = data === null || data === void 0 ? void 0 : (_data$tag = data.tag) === null || _data$tag === void 0 ? void 0 : (_data$tag$posts = _data$tag.posts) === null || _data$tag$posts === void 0 ? void 0 : _data$tag$posts.nodes;\n  return __jsx(PostlistWrapper, null, articles === null || articles === void 0 ? void 0 : articles.map(article => {\n    return __jsx(Post, {\n      date: article.date,\n      title: article.title,\n      authors: article.coAuthors,\n      category: article.categories.nodes[0].name,\n      id: article.id,\n      slug: article.slug\n    });\n  }));\n};\n\nexport default Postlist;","map":null,"metadata":{},"sourceType":"module"}
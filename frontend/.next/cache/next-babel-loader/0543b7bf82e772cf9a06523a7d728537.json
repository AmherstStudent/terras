{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { formatDate } from '../util';\nconst ArticleMeta = styled.header`\n  grid-column: 1 / -1;\n  margin-top: 40px;\n  margin-bottom: 40px;\n`;\nconst Section = styled.span`\n  font-family: Halyard Text;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 16px;\n  line-height: 23px;\n  letter-spacing: 0.05em;\n  color: #3f1f69;\n  text-transform: uppercase;\n  text-decoration: none;\n`;\nconst ArticleTitle = styled.h1`\n  font-family: var(--header-font);\n  font-weight: 600;\n  font-size: 54px;\n  line-height: 65px;\n  margin: 0;\n  margin-bottom: 10px;\n`;\nconst ArticleByline = styled.span`\n  font-family: var(--span-font);\n  font-size: 12px;\n  font-weight: 600;\n  line-height: 150%;\n  font-style: italic;\n  font-weight: 300;\n  color: #595959;\n`;\nconst ArticleDescription = styled.h2`\n  font-family: Halyard Text;\n  font-style: italic;\n  font-weight: 300;\n  font-size: 18px;\n  line-height: 172.1%;\n  color: #595959;\n  margin-block-start: 0;\n  margin-block-end: 0;\n  margin-top: 15px;\n  width: 95%;\n`;\nconst Author = styled.a`\n  font-family: Halyard Text;\n  font-weight: 600;\n  font-style: normal;\n  text-transform: capitalize !important;\n  text-decoration: none;\n  color: #595959;\n`;\n\nconst ArticleHeader = attributes => {\n  let authors = attributes.coAuthors; // Add link to the authors, and titles\n\n  let authorNames = authors.map(function (author) {\n    return __jsx(React.Fragment, null, __jsx(Link, {\n      key: author.id,\n      href: {\n        pathname: '/author',\n        query: {\n          id: author.id\n        }\n      },\n      passHref: true\n    }, __jsx(Author, null, author.display_name)), ',', ' ');\n  });\n  let roles = authors.map(function (author) {\n    return author.job_title;\n  }).join('');\n  return __jsx(ArticleMeta, null, __jsx(Section, null, attributes.section.name), __jsx(ArticleTitle, null, attributes.title), __jsx(ArticleByline, null, \"By \", authorNames, \" \", roles, \" || \", __jsx(\"time\", {\n    dateTime: attributes.date\n  }, formatDate(attributes.date))), __jsx(ArticleDescription, null, attributes.description));\n};\n\nexport default ArticleHeader;","map":null,"metadata":{},"sourceType":"module"}
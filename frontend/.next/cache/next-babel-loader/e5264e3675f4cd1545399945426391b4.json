{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dylan/projects/terras/frontend/components/util.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nfont-family: Halyard Text;\\nfont-style: normal;\\nfont-weight: bold;\\nline-height: 150%;\\ncolor: #595959;\\ntext-decoration: none;\\ntext-transform: capitalize;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport styled from 'styled-components';\nexport var formatDate = function formatDate(date) {\n  var updatedDate = new Date(date);\n  var options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  var formattedDate = updatedDate.toLocaleDateString(\"en-US\", options);\n  return formattedDate;\n};\nvar AuthorName = styled.a(_templateObject());\n\nvar AuthorNameLink = function AuthorNameLink(author) {\n  return __jsx(Link, {\n    key: author.id,\n    href: {\n      pathname: \"/author\",\n      query: {\n        id: author.id\n      }\n    },\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(AuthorName, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, author.display_name, \",  \"));\n};\n\nexport var AuthorNames = function AuthorNames(_ref) {\n  var authors = _ref.authors;\n  return authors === null || authors === void 0 ? void 0 : authors.map(function (author) {\n    return __jsx(AuthorNameLink, _extends({}, author, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  });\n};","map":{"version":3,"sources":["/Users/dylan/projects/terras/frontend/components/util.tsx"],"names":["Link","styled","formatDate","date","updatedDate","Date","options","year","month","day","formattedDate","toLocaleDateString","AuthorName","a","AuthorNameLink","author","id","pathname","query","display_name","AuthorNames","authors","map"],"mappings":";;;;;;;;;;;;;;;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAkB;AACxC,MAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAlB;AACA,MAAIG,OAAO,GAAG;AAACC,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,KAAK,EAAE,MAAzB;AAAiCC,IAAAA,GAAG,EAAE;AAAtC,GAAd;AACA,MAAIC,aAAa,GAAGN,WAAW,CAACO,kBAAZ,CAA+B,OAA/B,EAAwCL,OAAxC,CAApB;AACA,SAAOI,aAAP;AACH,CALM;AAOP,IAAME,UAAU,GAAGX,MAAM,CAACY,CAAV,mBAAhB;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AAC/B,SAAQ,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAE;AAACC,MAAAA,QAAQ,EAAC,SAAV;AAAqBC,MAAAA,KAAK,EAAE;AAACF,QAAAA,EAAE,EAAED,MAAM,CAACC;AAAZ;AAA5B,KAA5B;AAA0E,IAAA,QAAQ,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,MAAM,CAACI,YAApB,EAAkC,KAAlC,CADM,CAAR;AAGH,CAJD;;AAMA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,SAAgBA,OAAhB,aAAgBA,OAAhB,uBAAgBA,OAAO,CAAEC,GAAT,CAAa,UAACP,MAAD,EAAY;AAChE,WAAQ,MAAC,cAAD,eAAoBA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;AAAwC,GADD,CAAhB;AAAA,CAApB","sourcesContent":["\nimport Link from 'next/link'\nimport styled from 'styled-components'\n\nexport const formatDate = (date: string) => {\n    let updatedDate = new Date(date);\n    var options = {year: 'numeric', month: 'long', day: 'numeric' };\n    let formattedDate = updatedDate.toLocaleDateString(\"en-US\", options);\n    return formattedDate;\n}\n\nconst AuthorName = styled.a`\nfont-family: Halyard Text;\nfont-style: normal;\nfont-weight: bold;\nline-height: 150%;\ncolor: #595959;\ntext-decoration: none;\ntext-transform: capitalize;\n`\n\n\nconst AuthorNameLink = (author) => {\n    return (<Link key={author.id} href={{pathname:\"/author\", query: {id: author.id}}} passHref>\n      <AuthorName>{author.display_name}{\",  \"}</AuthorName>\n    </Link>)\n}\n\nexport const AuthorNames = ({authors}) => (authors?.map((author) => {\n    return (<AuthorNameLink {...author} />)}))\n\n"]},"metadata":{},"sourceType":"module"}
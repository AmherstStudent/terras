{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/projects/terras/frontend/components/homepage/Columns.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport styled from 'styled-components';\nimport { NewBlock } from '../article/RenderBlocks';\nconst MainRightSection = styled.div`\n  grid-column: span 8;\n  @media (max-width: 968px) {\n    grid-column: 1/ -1;\n  }\n`;\nconst SideLeftSection = styled.div`\n  grid-column: span 4;\n  @media (max-width: 968px) {\n    grid-column: 1/ -1;\n  }\n`;\nconst ThirdsSection = styled.div`\n  grid-column: span 4;\n  @media (max-width: 968px) {\n    grid-column: 1/ -1;\n  }\n`; // So what we want to do is .map over each ColumnsComponent\n// if core/columns.innerBlocks = 3 -\n// return <ThirdsSection> <p> </ThirdSection>\n// if 2\n/// ADDD ERROR MESSAGE!\n\nconst InnerColumn = ({\n  size,\n  block\n}) => {\n  console.log(block.__typename);\n\n  switch (size) {\n    case 66.66:\n      return __jsx(MainRightSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(NewBlock, _extends({}, block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })));\n      break;\n\n    case 33.33:\n      return __jsx(SideLeftSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(NewBlock, _extends({}, block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })));\n      break;\n\n    default:\n      return __jsx(ThirdsSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, __jsx(NewBlock, _extends({}, block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })));\n  }\n};\n\nconst Row = ({\n  column\n}) => {\n  return column === null || column === void 0 ? void 0 : column.innerBlocks.map((row, i) => {\n    return __jsx(InnerColumn, {\n      key: i,\n      size: row.attributes.width,\n      block: row.innerBlocks && row.innerBlocks[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    });\n  });\n};\n\nconst Columns = ({\n  columns\n}) => {\n  if ((columns === null || columns === void 0 ? void 0 : columns.length) > 1) {\n    return columns === null || columns === void 0 ? void 0 : columns.map((col, i) => {\n      return __jsx(Row, {\n        key: i,\n        column: col,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    });\n  } else {\n    return null;\n  }\n};\n\nexport default Columns;","map":{"version":3,"sources":["/Users/dylan/projects/terras/frontend/components/homepage/Columns.tsx"],"names":["styled","NewBlock","MainRightSection","div","SideLeftSection","ThirdsSection","InnerColumn","size","block","console","log","__typename","Row","column","innerBlocks","map","row","i","attributes","width","Columns","columns","length","col"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,MAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAI;;;;;CAApC;AAMA,MAAMC,eAAe,GAAGJ,MAAM,CAACG,GAAI;;;;;CAAnC;AAOA,MAAME,aAAa,GAAGL,MAAM,CAACG,GAAI;;;;;CAAjC,C,CAOA;AACA;AACA;AACA;AAEA;;AAEA,MAAMG,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;;AACA,UAAQJ,IAAR;AACE,SAAK,KAAL;AACE,aACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD,eAAcC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKA;;AACF,SAAK,KAAL;AACE,aACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKA;;AACF;AACE,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD,eAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAhBJ;AAsBD,CAxBD;;AAyBA,MAAMI,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC1B,SAAOA,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEC,WAAR,CAAoBC,GAApB,CAAwB,CAACC,GAAD,EAAMC,CAAN,KAAY;AACzC,WAAO,MAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,CAAlB;AAAqB,MAAA,IAAI,EAAED,GAAG,CAACE,UAAJ,CAAeC,KAA1C;AAAiD,MAAA,KAAK,EAAEH,GAAG,CAACF,WAAJ,IAAmBE,GAAG,CAACF,WAAJ,CAAgB,CAAhB,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,MAAMM,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,MAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,MAAT,IAAkB,CAAtB,EAAyB;AACvB,WAAOD,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEN,GAAT,CAAa,CAACQ,GAAD,EAAMN,CAAN,KAAY;AAC9B,aAAO,MAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAa,QAAA,MAAM,EAAEM,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD,GAJD,MAIO;AACL,WAAO,IAAP;AACD;AACF,CARD;;AAUA,eAAeH,OAAf","sourcesContent":["import styled from 'styled-components'\nimport { NewBlock } from '../article/RenderBlocks'\n\nconst MainRightSection = styled.div`\n  grid-column: span 8;\n  @media (max-width: 968px) {\n    grid-column: 1/ -1;\n  }\n`\nconst SideLeftSection = styled.div`\n  grid-column: span 4;\n  @media (max-width: 968px) {\n    grid-column: 1/ -1;\n  }\n`\n\nconst ThirdsSection = styled.div`\n  grid-column: span 4;\n  @media (max-width: 968px) {\n    grid-column: 1/ -1;\n  }\n`\n\n// So what we want to do is .map over each ColumnsComponent\n// if core/columns.innerBlocks = 3 -\n// return <ThirdsSection> <p> </ThirdSection>\n// if 2\n\n/// ADDD ERROR MESSAGE!\n\nconst InnerColumn = ({ size, block }) => {\n  console.log(block.__typename)\n  switch (size) {\n    case 66.66:\n      return (\n        <MainRightSection>\n          <NewBlock {...block} />\n        </MainRightSection>\n      )\n      break\n    case 33.33:\n      return (\n        <SideLeftSection>\n          <NewBlock {...block} />\n        </SideLeftSection>\n      )\n      break\n    default:\n      return (\n        <ThirdsSection>\n          <NewBlock {...block} />\n        </ThirdsSection>\n      )\n  }\n}\nconst Row = ({ column }) => {\n  return column?.innerBlocks.map((row, i) => {\n    return <InnerColumn key={i} size={row.attributes.width} block={row.innerBlocks && row.innerBlocks[0]} />\n  })\n}\n\nconst Columns = ({ columns }) => {\n  if (columns?.length > 1) {\n    return columns?.map((col, i) => {\n      return <Row key={i} column={col} />\n    })\n  } else {\n    return null\n  }\n}\n\nexport default Columns\n"]},"metadata":{},"sourceType":"module"}
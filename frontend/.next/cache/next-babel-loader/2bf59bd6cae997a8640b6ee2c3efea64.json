{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/projects/terras/frontend/pages/section/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/layout';\nimport Navbar from \"../../components/base/Navbar\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\n\nconst Category = ({\n  slug\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CategoryDocument, {\n    variables: {\n      category: slug.replace(/-/g, ' ')\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Loading Post...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Something wrong happened!\");\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, slug, \" H\")));\n};\n\nconst CategoryDocument = gql`\nquery CategoryPage($category: String) {\n  posts(where:{categoryName: $category}){\n    nodes{\n      title\n      excerpt\n      date\n      coAuthors{\n        display_name\n        slug\n        job_title\n      }\n      issues{\n        nodes{\n          name\n        }\n      }\n    }\n  }\n}\n\n\n`;\nexport default Category;","map":{"version":3,"sources":["/Users/dylan/projects/terras/frontend/pages/section/[slug].tsx"],"names":["Layout","Navbar","useQuery","gql","Category","slug","loading","error","data","CategoryDocument","variables","category","replace"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACO,gBAAD,EAAmB;AAC1DC,IAAAA,SAAS,EAAE;AAACC,MAAAA,QAAQ,EAAEN,IAAI,CAACO,OAAL,CAAa,IAAb,EAAmB,GAAnB;AAAX;AAD+C,GAAnB,CAAzC;AAGA,MAAIN,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACT,SAAQ,4BACR,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,EAER,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAJ,OADF,CAFQ,CAAR;AAMH,CAZD;;AAcA,MAAMI,gBAAgB,GAAGN,GAAI;;;;;;;;;;;;;;;;;;;;;;CAA7B;AAwBA,eAAeC,QAAf","sourcesContent":["import { NextPage } from 'next';\nimport Layout from '../../components/layout'\nimport Navbar from \"../../components/base/Navbar\"\nimport {useQuery} from \"@apollo/react-hooks\"\nimport gql from 'graphql-tag';\n\nconst Category = ({slug}) => {\n  const { loading, error, data } = useQuery(CategoryDocument, {\n    variables: {category: slug.replace(/-/g, ' ')}\n  })\n  if (loading) return <p>Loading Post...</p>;\n  if (error) return <p>Something wrong happened!</p>;\n    return (<>\n    <Navbar /> \n    <Layout>\n      <p>{slug} H</p>\n    </Layout>\n    </>)\n}\n\nconst CategoryDocument = gql`\nquery CategoryPage($category: String) {\n  posts(where:{categoryName: $category}){\n    nodes{\n      title\n      excerpt\n      date\n      coAuthors{\n        display_name\n        slug\n        job_title\n      }\n      issues{\n        nodes{\n          name\n        }\n      }\n    }\n  }\n}\n\n\n`\n\nexport default Category"]},"metadata":{},"sourceType":"module"}
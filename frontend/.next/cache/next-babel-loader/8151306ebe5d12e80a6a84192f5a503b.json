{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dylan/projects/terras/frontend/pages/section/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery CategoryPage($category: String) {\\n  posts(where:{categoryName: $category}){\\n    nodes{\\n      title\\n      excerpt\\n      date\\n      coAuthors{\\n        display_name\\n        slug\\n        job_title\\n      }\\n      issues{\\n        nodes{\\n          name\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from '../../components/layout';\nimport Navbar from \"../../components/base/Navbar\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\n\nvar Category = function Category(slug) {\n  var categoryTitle = slug.replace(/-/g, ' ');\n\n  var _useQuery = useQuery(CategoryDocument, {\n    variables: {\n      category: categoryTitle\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Loading Post...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Something wrong happened!\");\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, slug, \" H\")));\n};\n\nvar CategoryDocument = gql(_templateObject());\nexport default Category;","map":{"version":3,"sources":["/Users/dylan/projects/terras/frontend/pages/section/[slug].tsx"],"names":["Layout","Navbar","useQuery","gql","Category","slug","categoryTitle","replace","CategoryDocument","variables","category","loading","error","data"],"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,MAAIC,aAAa,GAAGD,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAApB;;AADyB,kBAEQL,QAAQ,CAACM,gBAAD,EAAmB;AAC1DC,IAAAA,SAAS,EAAE;AAACC,MAAAA,QAAQ,EAAEJ;AAAX;AAD+C,GAAnB,CAFhB;AAAA,MAEjBK,OAFiB,aAEjBA,OAFiB;AAAA,MAERC,KAFQ,aAERA,KAFQ;AAAA,MAEDC,IAFC,aAEDA,IAFC;;AAKzB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACT,SAAQ,4BACR,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,EAER,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,IAAJ,OADF,CAFQ,CAAR;AAMH,CAbD;;AAeA,IAAMG,gBAAgB,GAAGL,GAAH,mBAAtB;AAwBA,eAAeC,QAAf","sourcesContent":["import { NextPage } from 'next';\nimport Layout from '../../components/layout'\nimport Navbar from \"../../components/base/Navbar\"\nimport {useQuery} from \"@apollo/react-hooks\"\nimport gql from 'graphql-tag';\n\nconst Category = (slug) => {\n  let categoryTitle = slug.replace(/-/g, ' ');\n  const { loading, error, data } = useQuery(CategoryDocument, {\n    variables: {category: categoryTitle}\n  })\n  if (loading) return <p>Loading Post...</p>;\n  if (error) return <p>Something wrong happened!</p>;\n    return (<>\n    <Navbar /> \n    <Layout>\n      <p>{slug} H</p>\n    </Layout>\n    </>)\n}\n\nconst CategoryDocument = gql`\nquery CategoryPage($category: String) {\n  posts(where:{categoryName: $category}){\n    nodes{\n      title\n      excerpt\n      date\n      coAuthors{\n        display_name\n        slug\n        job_title\n      }\n      issues{\n        nodes{\n          name\n        }\n      }\n    }\n  }\n}\n\n\n`\n\nexport default Category"]},"metadata":{},"sourceType":"module"}
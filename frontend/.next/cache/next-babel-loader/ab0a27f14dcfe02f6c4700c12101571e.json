{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/projects/terras/frontend/components/homepage/Postlist.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { formatDate, AuthorNames } from '../util';\nconst TagsQuery = gql`\n  query Tags {\n    tag(id: \"cG9zdF90YWc6NQ==\") {\n      name\n      posts(where: { orderby: { field: DATE, order: DESC } }) {\n        nodes {\n          id\n          title\n          slug\n          date\n          categories {\n            nodes {\n              name\n              slug\n            }\n          }\n          coAuthors {\n            display_name\n            id\n            job_title\n          }\n        }\n      }\n    }\n  }\n`;\nconst PostWrapper = styled.div`\n  border-bottom: 0.5px rgba(0, 0, 0, 0.5) solid;\n  padding: 10px 0;\n`;\nconst Category = styled.a`\n  font-family: Halyard Text;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 17px;\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n  & > a {\n    text-decoration: none;\n    color: #3f1f69;\n  }\n`;\nconst Title = styled.h3`\n  font-family: Cormorant;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 21px;\n  line-height: 25px;\n  margin: 0;\n\n  & > a {\n    text-decoration: none;\n    color: #000000;\n  }\n`;\nconst Tagline = styled.p`\n  font-family: Halyard Text;\n  font-style: italic;\n  font-weight: 300;\n  font-size: 12px;\n  line-height: 150%;\n  color: #595959;\n  margin: 5px 0;\n`; /// STEAL FROM TAGS PAGE\n\nconst Post = ({\n  date,\n  title,\n  authors,\n  category,\n  id,\n  slug\n}) => {\n  let titles = authors.length > 1 ? authors === null || authors === void 0 ? void 0 : authors.map(author => {\n    return author.job_title;\n  }).join(' & ') : authors[0].job_title;\n  return __jsx(PostWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Category, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Link, {\n    key: id,\n    href: {\n      pathname: '/section',\n      query: {\n        slug: category\n      }\n    },\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, category))), __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(Link, {\n    key: id,\n    href: {\n      pathname: '/article',\n      query: {\n        slug: slug\n      }\n    },\n    passHref: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, title))), __jsx(Tagline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"by \", __jsx(AuthorNames, {\n    authors: authors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), titles, \" || \", __jsx(\"time\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, formatDate(date))));\n};\n\nconst PostlistWrapper = styled.div`\n  height: 100%;\n`;\n\nconst Postlist = () => {\n  var _data$tag, _data$tag$posts;\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TagsQuery);\n  let articles = data === null || data === void 0 ? void 0 : (_data$tag = data.tag) === null || _data$tag === void 0 ? void 0 : (_data$tag$posts = _data$tag.posts) === null || _data$tag$posts === void 0 ? void 0 : _data$tag$posts.nodes;\n  return __jsx(PostlistWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, articles === null || articles === void 0 ? void 0 : articles.map(article => {\n    return __jsx(Post, {\n      date: article.date,\n      title: article.title,\n      authors: article.coAuthors,\n      category: article.categories.nodes[0].name,\n      id: article.id,\n      slug: article.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Postlist;","map":{"version":3,"sources":["/Users/dylan/projects/terras/frontend/components/homepage/Postlist.tsx"],"names":["styled","Link","gql","useQuery","formatDate","AuthorNames","TagsQuery","PostWrapper","div","Category","a","Title","h3","Tagline","p","Post","date","title","authors","category","id","slug","titles","length","map","author","job_title","join","pathname","query","PostlistWrapper","Postlist","loading","error","data","articles","tag","posts","nodes","article","coAuthors","categories","name"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\nimport Link from 'next/link'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { formatDate, AuthorNames } from '../util'\n\nconst TagsQuery = gql`\n  query Tags {\n    tag(id: \"cG9zdF90YWc6NQ==\") {\n      name\n      posts(where: { orderby: { field: DATE, order: DESC } }) {\n        nodes {\n          id\n          title\n          slug\n          date\n          categories {\n            nodes {\n              name\n              slug\n            }\n          }\n          coAuthors {\n            display_name\n            id\n            job_title\n          }\n        }\n      }\n    }\n  }\n`\n\nconst PostWrapper = styled.div`\n  border-bottom: 0.5px rgba(0, 0, 0, 0.5) solid;\n  padding: 10px 0;\n`\nconst Category = styled.a`\n  font-family: Halyard Text;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 17px;\n  letter-spacing: 0.05em;\n  text-transform: uppercase;\n  & > a {\n    text-decoration: none;\n    color: #3f1f69;\n  }\n`\nconst Title = styled.h3`\n  font-family: Cormorant;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 21px;\n  line-height: 25px;\n  margin: 0;\n\n  & > a {\n    text-decoration: none;\n    color: #000000;\n  }\n`\nconst Tagline = styled.p`\n  font-family: Halyard Text;\n  font-style: italic;\n  font-weight: 300;\n  font-size: 12px;\n  line-height: 150%;\n  color: #595959;\n  margin: 5px 0;\n`\n\n/// STEAL FROM TAGS PAGE\nconst Post = ({ date, title, authors, category, id, slug }) => {\n  let titles =\n    authors.length > 1\n      ? authors\n          ?.map(author => {\n            return author.job_title\n          })\n          .join(' & ')\n      : authors[0].job_title\n\n  return (\n    <PostWrapper>\n      <Category>\n        <Link key={id} href={{ pathname: '/section', query: { slug: category } }} passHref>\n          <a>{category}</a>\n        </Link>\n      </Category>\n      <Title>\n        <Link key={id} href={{ pathname: '/article', query: { slug: slug } }} passHref>\n          <a>{title}</a>\n        </Link>\n      </Title>\n      <Tagline>\n        by <AuthorNames authors={authors} />\n        {titles} || <time>{formatDate(date)}</time>\n      </Tagline>\n    </PostWrapper>\n  )\n}\nconst PostlistWrapper = styled.div`\n  height: 100%;\n`\nconst Postlist = () => {\n  const { loading, error, data } = useQuery(TagsQuery)\n  let articles = data?.tag?.posts?.nodes\n  return (\n    <PostlistWrapper>\n      {articles?.map(article => {\n        return (\n          <Post\n            date={article.date}\n            title={article.title}\n            authors={article.coAuthors}\n            category={article.categories.nodes[0].name}\n            id={article.id}\n            slug={article.slug}\n          />\n        )\n      })}\n    </PostlistWrapper>\n  )\n}\n\nexport default Postlist\n"]},"metadata":{},"sourceType":"module"}
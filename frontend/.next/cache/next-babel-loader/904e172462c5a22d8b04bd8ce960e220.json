{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 20px 0;\\n  border-bottom: solid black 1px;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: Halyard Text;\\n  font-style: italic;\\n  font-weight: 300;\\n  font-size: 11px;\\n  line-height: 133.2%;\\n  /* or 15px */\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: Cormorant;\\n  font-style: normal;\\n  font-weight: bold;\\n  font-size: 18px;\\n  line-height: 147.7%;\\n  color: #000000;\\n  margin: 0;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  font-family: \\\"Halyard Micro\\\";\\n  font-style: normal;\\n  font-weight: normal;\\n  text-transform: uppercase;\\n  font-size: 18px;\\n  line-height: 160.7%;\\n  color: #000000;\\n  border-bottom: 5px solid black;\\n  padding-bottom: 5px;\\n  margin: 0;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery Tags {\\n  tag(id: \\\"cG9zdF90YWc6NQ==\\\") {\\n    name\\n    posts(where: { orderby: { field: DATE, order: DESC } }) {\\n      nodes {\\n        title\\n        slug\\n        date\\n        coAuthors {\\n          display_name\\n          id\\n        }\\n      }\\n    }\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from \"styled-components\";\nimport gql from 'graphql-tag';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Link from \"next/link\";\nvar TagsQuery = gql(_templateObject());\nvar FeaturedWrapper = styled.div(_templateObject2());\nvar FeaturedArticlesTitle = styled.h3(_templateObject3());\nvar ArticleTitle = styled.h5(_templateObject4());\nvar ArticleByline = styled.span(_templateObject5());\n\nvar Author = function Author(author) {\n  return __jsx(Link, {\n    key: author.id,\n    href: {\n      pathname: \"/author\",\n      query: {\n        id: author.id\n      }\n    },\n    passHref: true\n  }, __jsx(\"span\", null, author.display_name, \", \"));\n};\n\nvar ArticleWrapper = styled.div(_templateObject6());\n\nvar Article = function Article(article) {\n  var _article$coAuthors;\n\n  var options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  };\n  return __jsx(ArticleWrapper, null, __jsx(ArticleTitle, null, article.title), __jsx(ArticleByline, null, \" By \", \" \", (_article$coAuthors = article.coAuthors) === null || _article$coAuthors === void 0 ? void 0 : _article$coAuthors.map(function (author) {\n    return __jsx(Author, author);\n  }), \" | \", __jsx(\"time\", null, new Date(article.date).toLocaleDateString(\"en-US\", options))));\n}; // const coAuthors: React.FunctionComponent<{AuthorInterface}> = (coAuthors) => {\n//   return ()\n// }\n\n\nvar FeaturedArticles = function FeaturedArticles() {\n  var _data$tag, _data$tag$posts;\n\n  var _useQuery = useQuery(TagsQuery),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var articles = data === null || data === void 0 ? void 0 : (_data$tag = data.tag) === null || _data$tag === void 0 ? void 0 : (_data$tag$posts = _data$tag.posts) === null || _data$tag$posts === void 0 ? void 0 : _data$tag$posts.nodes;\n  console.log(articles); // let authorNames = articles.coAuthors.map(function(author) {\n  //   return <><Link key={author.id} href={{pathname:\"/author\", query: {id: author.id}}} passHref>\n  //       <h5>{author.display_name}</h5>\n  //   </Link>{ \",\"} </>\n  // })\n\n  return __jsx(FeaturedWrapper, null, __jsx(FeaturedArticlesTitle, null, \"Featured Articles\"), articles === null || articles === void 0 ? void 0 : articles.map(function (article) {\n    return __jsx(Article, article);\n  }));\n};\n\nexport default FeaturedArticles;","map":null,"metadata":{},"sourceType":"module"}
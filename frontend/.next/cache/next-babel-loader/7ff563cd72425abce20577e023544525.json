{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { NewBlock } from '../article/RenderBlocks';\nconst MainRightSection = styled.div`\n  grid-column: span 8;\n  @media (max-width : 968px) {\n    grid-column: 1/ -1;\n  }\n`;\nconst SideLeftSection = styled.div`\n  grid-column: span 4;\n  @media (max-width : 968px) {\n    grid-column: 1/ -1;\n  }\n`;\nconst ThirdsSection = styled.div`\n  grid-column: span 4;\n  @media (max-width : 968px) {\n    grid-column: 1/ -1;\n  }\n\n`; // So what we want to do is .map over each ColumnsComponent\n// if core/columns.innerBlocks = 3 - \n// return <ThirdsSection> <p> </ThirdSection>\n// if 2 \n/// ADDD ERROR MESSAGE!\n\nconst InnerColumn = ({\n  size,\n  block\n}) => {\n  console.log(block.__typename);\n\n  switch (size) {\n    case 66.66:\n      return __jsx(MainRightSection, null, __jsx(NewBlock, block));\n      break;\n\n    case 33.33:\n      return __jsx(SideLeftSection, null, __jsx(NewBlock, block));\n      break;\n\n    default:\n      return __jsx(ThirdsSection, null, __jsx(NewBlock, block));\n  }\n};\n\nconst Row = ({\n  column\n}) => {\n  return column === null || column === void 0 ? void 0 : column.innerBlocks.map((row, i) => {\n    return __jsx(InnerColumn, {\n      key: i,\n      size: row.attributes.width,\n      block: row.innerBlocks && row.innerBlocks[0]\n    });\n  });\n};\n\nconst Columns = ({\n  columns\n}) => {\n  if ((columns === null || columns === void 0 ? void 0 : columns.length) > 1) {\n    return columns === null || columns === void 0 ? void 0 : columns.map((col, i) => {\n      return __jsx(Row, {\n        key: i,\n        column: col\n      });\n    });\n  } else {\n    return null;\n  }\n};\n\nexport default Columns;","map":null,"metadata":{},"sourceType":"module"}
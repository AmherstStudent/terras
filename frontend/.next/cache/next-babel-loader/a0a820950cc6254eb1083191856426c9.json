{"ast":null,"code":"var _jsxFileName = \"/Users/dylan/projects/terras/frontend/pages/section/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/layout';\nimport Navbar from \"../../components/base/Navbar\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from 'graphql-tag';\nimport CategoryHead from \"../../components/section/CategoryHead\";\nimport styled from 'styled-components';\nimport { AuthorNames } from \"../../components/util\";\nconst Title = styled.h2`\nfont-family: Cormorant;\nfont-style: normal;\nfont-weight: bold;\nfont-size: 28px;\nline-height: 34px;\ncolor: #000000;\n`;\nconst SubText = styled.p`\n/* The Amherst community demonstrated against former attorney general Jeff Sessions in a variety of ways on Wednesday, April 24, as his scheduled talk at 8 p.m. in Johnson Chapel loomed over campus. */\n\nposition: absolute;\nwidth: 749px;\nheight: 47px;\nleft: 128px;\ntop: 840px;\n\nfont-family: Halyard Text;\nfont-style: italic;\nfont-weight: 300;\nfont-size: 16px;\nline-height: 23px;\n\ncolor: #000000;\n\n\n\n`;\n\nconst Section = ({\n  slug\n}) => {\n  let categoryTitle = slug.replace(/-/g, ' ');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(CategoryDocument, {\n    variables: {\n      category: categoryTitle\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Loading Post...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Something wrong happened!\");\n  let articles = data.posts.nodes;\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(CategoryHead, {\n    category: categoryTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, categoryTitle), articles.map(article => __jsx(React.Fragment, null, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, article.title), __jsx(AuthorNames, {\n    authors: article.coAuthors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(React.Fragment, null, article.excerpt), __jsx(React.Fragment, null, article.date)))));\n};\n\nconst CategoryDocument = gql`\nquery CategoryPage($category: String) {\n  posts(where:{categoryName: $category}){\n    nodes{\n      title\n      excerpt\n      date\n      coAuthors{\n        display_name\n        slug\n        job_title\n      }\n      issues{\n        nodes{\n          name\n        }\n      }\n    }\n  }\n}\n\n`;\n\nSection.getInitialProps = async ({\n  query\n}) => {\n  return {\n    slug: query.slug\n  };\n};\n\nexport default Section;","map":{"version":3,"sources":["/Users/dylan/projects/terras/frontend/pages/section/[slug].tsx"],"names":["Layout","Navbar","useQuery","gql","CategoryHead","styled","AuthorNames","Title","h2","SubText","p","Section","slug","categoryTitle","replace","loading","error","data","CategoryDocument","variables","category","articles","posts","nodes","map","article","title","coAuthors","excerpt","date","getInitialProps","query"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,EAAG;;;;;;;CAAxB;AAQA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,CAAE;;;;;;;;;;;;;;;;;;;CAAzB;;AAoBA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC1B,MAAIC,aAAa,GAAGD,IAAI,CAACE,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAApB;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CAACgB,gBAAD,EAAmB;AAC1DC,IAAAA,SAAS,EAAE;AAACC,MAAAA,QAAQ,EAAEP;AAAX;AAD+C,GAAnB,CAAzC;AAGA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACX,MAAIK,QAAQ,GAAGJ,IAAI,CAACK,KAAL,CAAWC,KAA1B;AACE,SAAQ,4BACR,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADQ,EAER,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,QAAQ,EAAEV,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,aAAJ,CAFF,EAGGQ,QAAQ,CAACG,GAAT,CAAcC,OAAD,IAAc,4BAC1B,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,OAAO,CAACC,KAAhB,CAD0B,EAE1B,MAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAO,CAACE,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF0B,EAG1B,4BAAGF,OAAO,CAACG,OAAX,CAH0B,EAI1B,4BAAGH,OAAO,CAACI,IAAX,CAJ0B,CAA3B,CAHH,CAFQ,CAAR;AAcH,CAtBD;;AAwBA,MAAMX,gBAAgB,GAAGf,GAAI;;;;;;;;;;;;;;;;;;;;;CAA7B;;AAuBAQ,OAAO,CAACmB,eAAR,GAA0B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC7C,SAAO;AAAEnB,IAAAA,IAAI,EAAEmB,KAAK,CAACnB;AAAd,GAAP;AACD,CAFD;;AAIA,eAAeD,OAAf","sourcesContent":["import { NextPage } from 'next';\nimport Layout from '../../components/layout'\nimport Navbar from \"../../components/base/Navbar\"\nimport {useQuery} from \"@apollo/react-hooks\"\nimport gql from 'graphql-tag';\nimport CategoryHead from \"../../components/section/CategoryHead\"\nimport styled from 'styled-components'\nimport {AuthorNames} from \"../../components/util\"\n\nconst Title = styled.h2`\nfont-family: Cormorant;\nfont-style: normal;\nfont-weight: bold;\nfont-size: 28px;\nline-height: 34px;\ncolor: #000000;\n`\nconst SubText = styled.p`\n/* The Amherst community demonstrated against former attorney general Jeff Sessions in a variety of ways on Wednesday, April 24, as his scheduled talk at 8 p.m. in Johnson Chapel loomed over campus. */\n\nposition: absolute;\nwidth: 749px;\nheight: 47px;\nleft: 128px;\ntop: 840px;\n\nfont-family: Halyard Text;\nfont-style: italic;\nfont-weight: 300;\nfont-size: 16px;\nline-height: 23px;\n\ncolor: #000000;\n\n\n\n`\nconst Section = ({slug}) => {\n  let categoryTitle = slug.replace(/-/g, ' ');\n  const { loading, error, data } = useQuery(CategoryDocument, {\n    variables: {category: categoryTitle}\n  })\n  if (loading) return <p>Loading Post...</p>;\n  if (error) return <p>Something wrong happened!</p>;\n  let articles = data.posts.nodes\n    return (<>\n    <Navbar /> \n    <Layout>\n      <CategoryHead category={categoryTitle} />\n      <p>{categoryTitle}</p>\n      {articles.map((article) => (<>\n        <Title>{article.title}</Title>\n        <AuthorNames authors={article.coAuthors} />\n        <>{article.excerpt}</>\n        <>{article.date}</>\n        \n      </>))}\n    </Layout>\n    </>)\n}\n\nconst CategoryDocument = gql`\nquery CategoryPage($category: String) {\n  posts(where:{categoryName: $category}){\n    nodes{\n      title\n      excerpt\n      date\n      coAuthors{\n        display_name\n        slug\n        job_title\n      }\n      issues{\n        nodes{\n          name\n        }\n      }\n    }\n  }\n}\n\n`\n\nSection.getInitialProps = async ({ query }) => {\n  return { slug: query.slug }\n}\n\nexport default Section"]},"metadata":{},"sourceType":"module"}